/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */package com.mac.care_point.service.payment_voucher;import com.mac.care_point.service.item_sale.model.TCustomerLedger;import java.util.List;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;/** * * @author kasun */public interface PaymentVoucherRepository extends JpaRepository<TCustomerLedger, Integer> {    @Query(value = "select GROUP_CONCAT(m_vehicle.vehicle_no) as vehicle_nos from m_vehicle where m_vehicle.`client`=:client", nativeQuery = true)    public String getClientVehicles(@Param("client") Integer client);    @Query(value = "SELECT ifnull(sum(t_acc_ledger.debit)-sum(t_acc_ledger.credit),0.00) as value\n"            + "from t_acc_ledger\n"            + "where t_acc_ledger.acc_account=\n"            + "(select ifnull(m_client.acc_account,0) as acc_account from m_client where m_client.index_no=:client)\n"            + "and t_acc_ledger.acc_account!=(\n"            + "select ifnull(m_acc_setting.acc_account,null) as acc_account from m_acc_setting where m_acc_setting.name='over_payment_received')", nativeQuery = true)    public Double getClientBalance(@Param("client") Integer client);    @Query(value = "select \n"            + "	ifnull(sum(t_acc_ledger.debit) -\n"            + "	sum(t_acc_ledger.credit),0.00) as over_payment\n"            + "from t_acc_ledger\n"            + "where t_acc_ledger.type_index_no=:client and t_acc_ledger.acc_account=:over", nativeQuery = true)    public Double getClientOverPayment(@Param("client") Integer client ,@Param ("over") Integer ovea);    @Query(value = "select t_customer_ledger.invoice as invoice,\n"            + "   t_invoice.date as invoice_date,\n"            + "   t_invoice.final_value as invoice_amount,\n"            + "   if(sum(t_customer_ledger.credit_amount)='',0.00,sum(t_customer_ledger.credit_amount)) as pay_amount,\n"            + "   if(sum(t_customer_ledger.debit_amount) - sum(t_customer_ledger.credit_amount)='',0.00,sum(t_customer_ledger.debit_amount) - sum(t_customer_ledger.credit_amount)) as balance_payment\n"            + "	from t_customer_ledger \n"            + "   left JOIN t_invoice on t_invoice.index_no=t_customer_ledger.invoice\n"            + "   WHERE (t_customer_ledger.`type`='INVOICE' or t_customer_ledger.`type`='PAYMENT' or t_customer_ledger.`type`='SYSTEM_INTEGRATION_INVOICE' or t_customer_ledger.`type`='SYSTEM_INTEGRATION_PAYMENT' ) and \n"            + "	t_customer_ledger.`client`=?\n"            + "   group by t_customer_ledger.invoice\n"            + "   HAVING balance_payment>0.00", nativeQuery = true)    public List<Object> getBalanceInvoice(@Param("client") Integer client);    @Query(value = "select t_customer_ledger.payment as payment_index,\n"            + "if(sum(t_customer_ledger.debit_amount) - sum(t_customer_ledger.credit_amount)='',0.00,sum(t_customer_ledger.debit_amount) - sum(t_customer_ledger.credit_amount)) as over_payment,"            + "t_customer_ledger.`type`\n"            + "from t_customer_ledger \n"            + "WHERE (t_customer_ledger.`type`='ADVANCE' or t_customer_ledger.`type`='OVER_PAYMENT') and t_customer_ledger.`client`=:client\n"            + "group by t_customer_ledger.payment \n"            + "HAVING over_payment>0.00", nativeQuery = true)    public List<Object[]> getFIFOList(@Param("client") Integer client);   }